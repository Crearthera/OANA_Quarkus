/*
 * This file is generated by jOOQ.
 */
package org.oana.storage.tables.records;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;

import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.oana.storage.tables.ExerciseTags;
import org.oana.storage.tables.interfaces.IExerciseTags;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "exercise_tags",
    schema = "public"
)
public class ExerciseTagsRecord extends UpdatableRecordImpl<ExerciseTagsRecord> implements IExerciseTags {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.exercise_tags.exercise_id</code>.
     */
    @Override
    public void setExerciseId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.exercise_tags.exercise_id</code>.
     */
    @Id
    @Column(name = "exercise_id", nullable = false)
    @NotNull
    @Override
    public UUID getExerciseId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.exercise_tags.created_at</code>.
     */
    @Override
    public void setCreatedAt(OffsetDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.exercise_tags.created_at</code>.
     */
    @Column(name = "created_at", nullable = false, precision = 6)
    @Override
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(1);
    }

    /**
     * Setter for <code>public.exercise_tags.tag_id</code>.
     */
    @Override
    public void setTagId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.exercise_tags.tag_id</code>.
     */
    @Column(name = "tag_id", nullable = false)
    @NotNull
    @Override
    public Long getTagId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IExerciseTags from) {
        setExerciseId(from.getExerciseId());
        setCreatedAt(from.getCreatedAt());
        setTagId(from.getTagId());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IExerciseTags> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExerciseTagsRecord
     */
    public ExerciseTagsRecord() {
        super(ExerciseTags.EXERCISE_TAGS);
    }

    /**
     * Create a detached, initialised ExerciseTagsRecord
     */
    public ExerciseTagsRecord(UUID exerciseId, OffsetDateTime createdAt, Long tagId) {
        super(ExerciseTags.EXERCISE_TAGS);

        setExerciseId(exerciseId);
        setCreatedAt(createdAt);
        setTagId(tagId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ExerciseTagsRecord
     */
    public ExerciseTagsRecord(org.oana.storage.tables.pojos.ExerciseTags value) {
        super(ExerciseTags.EXERCISE_TAGS);

        if (value != null) {
            setExerciseId(value.getExerciseId());
            setCreatedAt(value.getCreatedAt());
            setTagId(value.getTagId());
            resetChangedOnNotNull();
        }
    }
}
