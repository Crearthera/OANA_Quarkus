/*
 * This file is generated by jOOQ.
 */
package org.oana.storage.tables.pojos;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;

import java.time.OffsetDateTime;
import java.util.UUID;

import org.oana.storage.tables.interfaces.IExerciseTags;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "exercise_tags",
    schema = "public"
)
public class ExerciseTags implements IExerciseTags {

    private static final long serialVersionUID = 1L;

    private UUID exerciseId;
    private OffsetDateTime createdAt;
    private Long tagId;

    public ExerciseTags() {}

    public ExerciseTags(IExerciseTags value) {
        this.exerciseId = value.getExerciseId();
        this.createdAt = value.getCreatedAt();
        this.tagId = value.getTagId();
    }

    public ExerciseTags(
        UUID exerciseId,
        OffsetDateTime createdAt,
        Long tagId
    ) {
        this.exerciseId = exerciseId;
        this.createdAt = createdAt;
        this.tagId = tagId;
    }

    /**
     * Getter for <code>public.exercise_tags.exercise_id</code>.
     */
    @Id
    @Column(name = "exercise_id", nullable = false)
    @NotNull
    @Override
    public UUID getExerciseId() {
        return this.exerciseId;
    }

    /**
     * Setter for <code>public.exercise_tags.exercise_id</code>.
     */
    @Override
    public void setExerciseId(UUID exerciseId) {
        this.exerciseId = exerciseId;
    }

    /**
     * Getter for <code>public.exercise_tags.created_at</code>.
     */
    @Column(name = "created_at", nullable = false, precision = 6)
    @Override
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>public.exercise_tags.created_at</code>.
     */
    @Override
    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>public.exercise_tags.tag_id</code>.
     */
    @Column(name = "tag_id", nullable = false)
    @NotNull
    @Override
    public Long getTagId() {
        return this.tagId;
    }

    /**
     * Setter for <code>public.exercise_tags.tag_id</code>.
     */
    @Override
    public void setTagId(Long tagId) {
        this.tagId = tagId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ExerciseTags other = (ExerciseTags) obj;
        if (this.exerciseId == null) {
            if (other.exerciseId != null)
                return false;
        }
        else if (!this.exerciseId.equals(other.exerciseId))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.tagId == null) {
            if (other.tagId != null)
                return false;
        }
        else if (!this.tagId.equals(other.tagId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.exerciseId == null) ? 0 : this.exerciseId.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.tagId == null) ? 0 : this.tagId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ExerciseTags (");

        sb.append(exerciseId);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(tagId);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IExerciseTags from) {
        setExerciseId(from.getExerciseId());
        setCreatedAt(from.getCreatedAt());
        setTagId(from.getTagId());
    }

    @Override
    public <E extends IExerciseTags> E into(E into) {
        into.from(this);
        return into;
    }
}
