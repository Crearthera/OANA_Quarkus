/*
 * This file is generated by jOOQ.
 */
package org.oana.storage.tables.pojos;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;

import java.time.LocalDateTime;
import java.util.UUID;

import org.oana.storage.tables.interfaces.IUserAcounts;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "user_acounts",
    schema = "public"
)
public class UserAcounts implements IUserAcounts {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private UUID providerId;
    private LocalDateTime createdAd;
    private Long userTypeId;

    public UserAcounts() {}

    public UserAcounts(IUserAcounts value) {
        this.id = value.getId();
        this.providerId = value.getProviderId();
        this.createdAd = value.getCreatedAd();
        this.userTypeId = value.getUserTypeId();
    }

    public UserAcounts(
        UUID id,
        UUID providerId,
        LocalDateTime createdAd,
        Long userTypeId
    ) {
        this.id = id;
        this.providerId = providerId;
        this.createdAd = createdAd;
        this.userTypeId = userTypeId;
    }

    /**
     * Getter for <code>public.user_acounts.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false)
    @Override
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.user_acounts.id</code>.
     */
    @Override
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.user_acounts.provider_id</code>.
     */
    @Column(name = "provider_id", nullable = false)
    @NotNull
    @Override
    public UUID getProviderId() {
        return this.providerId;
    }

    /**
     * Setter for <code>public.user_acounts.provider_id</code>.
     */
    @Override
    public void setProviderId(UUID providerId) {
        this.providerId = providerId;
    }

    /**
     * Getter for <code>public.user_acounts.created_ad</code>.
     */
    @Column(name = "created_ad", precision = 6)
    @Override
    public LocalDateTime getCreatedAd() {
        return this.createdAd;
    }

    /**
     * Setter for <code>public.user_acounts.created_ad</code>.
     */
    @Override
    public void setCreatedAd(LocalDateTime createdAd) {
        this.createdAd = createdAd;
    }

    /**
     * Getter for <code>public.user_acounts.user_type_id</code>.
     */
    @Column(name = "user_type_id")
    @Override
    public Long getUserTypeId() {
        return this.userTypeId;
    }

    /**
     * Setter for <code>public.user_acounts.user_type_id</code>.
     */
    @Override
    public void setUserTypeId(Long userTypeId) {
        this.userTypeId = userTypeId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final UserAcounts other = (UserAcounts) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.providerId == null) {
            if (other.providerId != null)
                return false;
        }
        else if (!this.providerId.equals(other.providerId))
            return false;
        if (this.createdAd == null) {
            if (other.createdAd != null)
                return false;
        }
        else if (!this.createdAd.equals(other.createdAd))
            return false;
        if (this.userTypeId == null) {
            if (other.userTypeId != null)
                return false;
        }
        else if (!this.userTypeId.equals(other.userTypeId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.providerId == null) ? 0 : this.providerId.hashCode());
        result = prime * result + ((this.createdAd == null) ? 0 : this.createdAd.hashCode());
        result = prime * result + ((this.userTypeId == null) ? 0 : this.userTypeId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserAcounts (");

        sb.append(id);
        sb.append(", ").append(providerId);
        sb.append(", ").append(createdAd);
        sb.append(", ").append(userTypeId);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUserAcounts from) {
        setId(from.getId());
        setProviderId(from.getProviderId());
        setCreatedAd(from.getCreatedAd());
        setUserTypeId(from.getUserTypeId());
    }

    @Override
    public <E extends IUserAcounts> E into(E into) {
        into.from(this);
        return into;
    }
}
