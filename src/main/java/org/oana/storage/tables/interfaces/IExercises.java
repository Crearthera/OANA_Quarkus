/*
 * This file is generated by jOOQ.
 */
package org.oana.storage.tables.interfaces;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;

import java.io.Serializable;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "exercises",
    schema = "public"
)
public interface IExercises extends Serializable {

    /**
     * Setter for <code>public.exercises.id</code>.
     */
    public void setId(UUID value);

    /**
     * Getter for <code>public.exercises.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false)
    public UUID getId();

    /**
     * Setter for <code>public.exercises.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value);

    /**
     * Getter for <code>public.exercises.created_at</code>.
     */
    @Column(name = "created_at", nullable = false, precision = 6)
    public OffsetDateTime getCreatedAt();

    /**
     * Setter for <code>public.exercises.updated_at</code>.
     */
    public void setUpdatedAt(OffsetDateTime value);

    /**
     * Getter for <code>public.exercises.updated_at</code>.
     */
    @Column(name = "updated_at", nullable = false, precision = 6)
    @NotNull
    public OffsetDateTime getUpdatedAt();

    /**
     * Setter for <code>public.exercises.description</code>.
     */
    public void setDescription(String value);

    /**
     * Getter for <code>public.exercises.description</code>.
     */
    @Column(name = "description", nullable = false)
    @NotNull
    public String getDescription();

    /**
     * Setter for <code>public.exercises.objectives</code>.
     */
    public void setObjectives(String[] value);

    /**
     * Getter for <code>public.exercises.objectives</code>.
     */
    @Column(name = "objectives", nullable = false)
    @NotNull
    public String[] getObjectives();

    /**
     * Setter for <code>public.exercises.materials</code>.
     */
    public void setMaterials(String value);

    /**
     * Getter for <code>public.exercises.materials</code>.
     */
    @Column(name = "materials")
    public String getMaterials();

    /**
     * Setter for <code>public.exercises.duration</code>.
     */
    public void setDuration(Long value);

    /**
     * Getter for <code>public.exercises.duration</code>.
     */
    @Column(name = "duration")
    public Long getDuration();

    /**
     * Setter for <code>public.exercises.difficulty_id</code>.
     */
    public void setDifficultyId(Long value);

    /**
     * Getter for <code>public.exercises.difficulty_id</code>.
     */
    @Column(name = "difficulty_id")
    public Long getDifficultyId();

    /**
     * Setter for <code>public.exercises.rate</code>.
     */
    public void setRate(BigDecimal value);

    /**
     * Getter for <code>public.exercises.rate</code>.
     */
    @Column(name = "rate")
    public BigDecimal getRate();

    /**
     * Setter for <code>public.exercises.is_premium</code>.
     */
    public void setIsPremium(Boolean value);

    /**
     * Getter for <code>public.exercises.is_premium</code>.
     */
    @Column(name = "is_premium", nullable = false)
    public Boolean getIsPremium();

    /**
     * Setter for <code>public.exercises.therapist_id</code>.
     */
    public void setTherapistId(UUID value);

    /**
     * Getter for <code>public.exercises.therapist_id</code>.
     */
    @Column(name = "therapist_id", nullable = false)
    @NotNull
    public UUID getTherapistId();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IExercises
     */
    public void from(IExercises from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IExercises
     */
    public <E extends IExercises> E into(E into);
}
