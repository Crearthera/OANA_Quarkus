/*
 * This file is generated by jOOQ.
 */
package org.oana.storage;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.oana.storage.tables.ExerciseDifficulties;
import org.oana.storage.tables.ExerciseTags;
import org.oana.storage.tables.Exercises;
import org.oana.storage.tables.Tags;
import org.oana.storage.tables.UserAcounts;
import org.oana.storage.tables.UserAdvancements;
import org.oana.storage.tables.UserType;
import org.oana.storage.tables.records.ExerciseDifficultiesRecord;
import org.oana.storage.tables.records.ExerciseTagsRecord;
import org.oana.storage.tables.records.ExercisesRecord;
import org.oana.storage.tables.records.TagsRecord;
import org.oana.storage.tables.records.UserAcountsRecord;
import org.oana.storage.tables.records.UserAdvancementsRecord;
import org.oana.storage.tables.records.UserTypeRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ExerciseDifficultiesRecord> EXERCISE_DIFFICULTIES_PKEY = Internal.createUniqueKey(ExerciseDifficulties.EXERCISE_DIFFICULTIES, DSL.name("exercise_difficulties_pkey"), new TableField[] { ExerciseDifficulties.EXERCISE_DIFFICULTIES.ID }, true);
    public static final UniqueKey<ExerciseTagsRecord> EXERCISE_TAGS_PKEY = Internal.createUniqueKey(ExerciseTags.EXERCISE_TAGS, DSL.name("exercise_tags_pkey"), new TableField[] { ExerciseTags.EXERCISE_TAGS.EXERCISE_ID }, true);
    public static final UniqueKey<ExercisesRecord> EXERCISES_PKEY = Internal.createUniqueKey(Exercises.EXERCISES, DSL.name("exercises_pkey"), new TableField[] { Exercises.EXERCISES.ID }, true);
    public static final UniqueKey<TagsRecord> TAGS_PKEY = Internal.createUniqueKey(Tags.TAGS, DSL.name("tags_pkey"), new TableField[] { Tags.TAGS.ID }, true);
    public static final UniqueKey<UserAcountsRecord> USER_ACOUNTS_PKEY = Internal.createUniqueKey(UserAcounts.USER_ACOUNTS, DSL.name("user_acounts_pkey"), new TableField[] { UserAcounts.USER_ACOUNTS.ID }, true);
    public static final UniqueKey<UserAdvancementsRecord> USER_ADVANCEMENT_PKEY = Internal.createUniqueKey(UserAdvancements.USER_ADVANCEMENTS, DSL.name("user_advancement_pkey"), new TableField[] { UserAdvancements.USER_ADVANCEMENTS.ID }, true);
    public static final UniqueKey<UserTypeRecord> USER_TYPE_PKEY = Internal.createUniqueKey(UserType.USER_TYPE, DSL.name("user_type_pkey"), new TableField[] { UserType.USER_TYPE.ID }, true);
    public static final UniqueKey<UserTypeRecord> USER_TYPE_USER_TYPE_KEY = Internal.createUniqueKey(UserType.USER_TYPE, DSL.name("user_type_user_type_key"), new TableField[] { UserType.USER_TYPE.USER_TYPE_ }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ExerciseTagsRecord, ExercisesRecord> EXERCISE_TAGS__EXERCISE_TAGS_EXERCISE_ID_FKEY = Internal.createForeignKey(ExerciseTags.EXERCISE_TAGS, DSL.name("exercise_tags_exercise_id_fkey"), new TableField[] { ExerciseTags.EXERCISE_TAGS.EXERCISE_ID }, Keys.EXERCISES_PKEY, new TableField[] { Exercises.EXERCISES.ID }, true);
    public static final ForeignKey<ExerciseTagsRecord, TagsRecord> EXERCISE_TAGS__EXERCISE_TAGS_TAG_ID_FKEY = Internal.createForeignKey(ExerciseTags.EXERCISE_TAGS, DSL.name("exercise_tags_tag_id_fkey"), new TableField[] { ExerciseTags.EXERCISE_TAGS.TAG_ID }, Keys.TAGS_PKEY, new TableField[] { Tags.TAGS.ID }, true);
    public static final ForeignKey<ExercisesRecord, ExerciseDifficultiesRecord> EXERCISES__EXERCISES_DIFFICULTY_ID_FKEY = Internal.createForeignKey(Exercises.EXERCISES, DSL.name("exercises_difficulty_id_fkey"), new TableField[] { Exercises.EXERCISES.DIFFICULTY_ID }, Keys.EXERCISE_DIFFICULTIES_PKEY, new TableField[] { ExerciseDifficulties.EXERCISE_DIFFICULTIES.ID }, true);
    public static final ForeignKey<ExercisesRecord, UserAcountsRecord> EXERCISES__EXERCISES_THERAPIST_ID_FKEY = Internal.createForeignKey(Exercises.EXERCISES, DSL.name("exercises_therapist_id_fkey"), new TableField[] { Exercises.EXERCISES.THERAPIST_ID }, Keys.USER_ACOUNTS_PKEY, new TableField[] { UserAcounts.USER_ACOUNTS.ID }, true);
    public static final ForeignKey<UserAcountsRecord, UserTypeRecord> USER_ACOUNTS__USER_ACOUNTS_USER_TYPE_ID_FKEY = Internal.createForeignKey(UserAcounts.USER_ACOUNTS, DSL.name("user_acounts_user_type_id_fkey"), new TableField[] { UserAcounts.USER_ACOUNTS.USER_TYPE_ID }, Keys.USER_TYPE_PKEY, new TableField[] { UserType.USER_TYPE.ID }, true);
    public static final ForeignKey<UserAdvancementsRecord, ExercisesRecord> USER_ADVANCEMENTS__USER_ADVANCEMENTS_EXERCISE_ID_FKEY = Internal.createForeignKey(UserAdvancements.USER_ADVANCEMENTS, DSL.name("user_advancements_exercise_id_fkey"), new TableField[] { UserAdvancements.USER_ADVANCEMENTS.EXERCISE_ID }, Keys.EXERCISES_PKEY, new TableField[] { Exercises.EXERCISES.ID }, true);
    public static final ForeignKey<UserAdvancementsRecord, UserAcountsRecord> USER_ADVANCEMENTS__USER_ADVANCEMENTS_ID_FKEY = Internal.createForeignKey(UserAdvancements.USER_ADVANCEMENTS, DSL.name("user_advancements_id_fkey"), new TableField[] { UserAdvancements.USER_ADVANCEMENTS.ID }, Keys.USER_ACOUNTS_PKEY, new TableField[] { UserAcounts.USER_ACOUNTS.ID }, true);
}
